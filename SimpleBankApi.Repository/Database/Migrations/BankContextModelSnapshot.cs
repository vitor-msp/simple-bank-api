// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SimpleBankApi.Repository.Database.Context;

#nullable disable

namespace SimpleBankApi.Repository.Migrations
{
    [DbContext(typeof(BankContext))]
    partial class BankContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SimpleBankApi.Repository.Database.Schema.AccountDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountNumber")
                        .HasColumnType("integer");

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("OwnerId")
                        .HasColumnType("integer");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("text");

                    b.Property<DateTime?>("RefreshTokenExpiration")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AccountNumber")
                        .IsUnique();

                    b.HasIndex("OwnerId");

                    b.ToTable("Accounts", (string)null);
                });

            modelBuilder.Entity("SimpleBankApi.Repository.Database.Schema.CustomerDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Cpf")
                        .IsUnique();

                    b.ToTable("Customers", (string)null);
                });

            modelBuilder.Entity("SimpleBankApi.Repository.Database.Schema.TransactionDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("OperatingAccountId")
                        .HasColumnType("integer");

                    b.Property<int?>("RelatedAccountId")
                        .HasColumnType("integer");

                    b.Property<int?>("RelatedTransactionId")
                        .HasColumnType("integer");

                    b.Property<int>("TransactionType")
                        .HasColumnType("integer");

                    b.Property<double>("Value")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("OperatingAccountId");

                    b.HasIndex("RelatedAccountId");

                    b.HasIndex("RelatedTransactionId");

                    b.ToTable("Transactions", (string)null);
                });

            modelBuilder.Entity("SimpleBankApi.Repository.Database.Schema.AccountDB", b =>
                {
                    b.HasOne("SimpleBankApi.Repository.Database.Schema.CustomerDB", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("SimpleBankApi.Repository.Database.Schema.TransactionDB", b =>
                {
                    b.HasOne("SimpleBankApi.Repository.Database.Schema.AccountDB", "OperatingAccount")
                        .WithMany()
                        .HasForeignKey("OperatingAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SimpleBankApi.Repository.Database.Schema.AccountDB", "RelatedAccount")
                        .WithMany()
                        .HasForeignKey("RelatedAccountId");

                    b.HasOne("SimpleBankApi.Repository.Database.Schema.TransactionDB", "RelatedTransaction")
                        .WithMany()
                        .HasForeignKey("RelatedTransactionId");

                    b.Navigation("OperatingAccount");

                    b.Navigation("RelatedAccount");

                    b.Navigation("RelatedTransaction");
                });
#pragma warning restore 612, 618
        }
    }
}
